on:
  issue_comment:
    types: [created]
jobs:
  OpenAI_Reply:
    if: "contains(github.event.issue.labels.*.name, 'bashGPT')"
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write

    steps:
      - name: git clone
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install openai
          pip install tiktoken

      - name: Get all issue comments
        env: 
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          mkdir -p .github
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X GET "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments" -o comments.json
          python3 .github/config/bashGPT.py

      - name: Create comment
        id: create_comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body-file: '.github/comment-template.md'

      - name: Get bot's latest comment and execute code
        id: execute_code
        env: 
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python3 .github/config/extract_and_execute_bot_comment.py

      - name: Update comment with output
        if: steps.execute_code.outputs.code_output != ''
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.create_comment.outputs.comment-id }}
          body-file: '.github/comment-template.md'

      - name: Commit changes
        run: |
          git status
          current_branch=$(git status | sed -nE 's/On branch (.+)/\1/p')
          echo "Current branch: $current_branch"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          commit_message=$(echo -e "${{ steps.execute_code.outputs.summaries }}")
          echo $commit_message
          commit_message=$commit_message"."
          git diff --quiet && git diff --staged --quiet || git commit -m "$commit_message"
          git push --set-upstream origin $current_branch